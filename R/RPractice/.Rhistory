install.packages("dplyr")
install.packages(("dplyr", "ggplot2", "caret"))
install.packages(c("dplyr","ggplot2", "caret"))
library(dplyr)
library(ggplot2)
library(caret)
df <- mtcars
head(df)
library(dplyr)
students <- data.frame(
ID = 1:6,
Name = c("Asha", "Ravi", "Meena", "Kiran", "Divya", "Rahul"),
Age = c(20, 22, 21, 23, 22, 21),
Score = c(85, 90, 78, 88, 92, 80),
Dept = c("CS", "Math", "CS", "Physics", "Math", "CS")
)
students
filter(students, Age > 21)
select(students, Name, Score)
group_by(students,Dept)
group_by(filter(students, Age > 21),Dept)
summarise(group_by(filter(students, Age > 21),Dept),Average_Score = mean(Score))
arrange(summarise(group_by(filter(students, Age > 21),Dept),Average_Score = mean(Score)),desc(Average_Score))
students %>%
filter(Age > 21) %>%
group_by(Dept) %>%
summarise(Average_Score = mean(Score)) %>%
arrange(desc(Average_Score))
library(dplyr)
library(ggplot2)
students <- data.frame(
ID = 1:6,
Name = c("Asha", "Ravi", "Meena", "Kiran", "Divya", "Rahul"),
Age = c(20, 22, 21, 23, 22, 21),
Score = c(85, 90, 78, 88, 92, 80),
Dept = c("CS", "Math", "CS", "Physics", "Math", "CS")
)
students
# Scatterplot: Age vs Score, colored by Dept
ggplot(students, aes(x=Age, y=Score, color=Dept)) +
geom_point(size=3) +
geom_smooth(method="lm", se=FALSE) +
labs(title="Student Scores by Age and Dept", x="Age", y="Score") +
theme_minimal()
# Install if needed
# install.packages(c("caret", "ggplot2", "dplyr"))
library(caret)
library(ggplot2)
library(dplyr)
# Built-in dataset
data(iris)
head(iris)
glimpse(iris)
iris %>%
group_by(Species) %>%
summarise(
Avg_Sepal_Length = mean(Sepal.Length),
Avg_Sepal_Width  = mean(Sepal.Width),
Avg_Petal_Length = mean(Petal.Length),
Avg_Petal_Width  = mean(Petal.Width)
)
ggplot(iris, aes(x=Petal.Length, y=Petal.Width, color=Species)) +
geom_point(size=3) +
labs(title="Iris Petal Dimensions", x="Petal Length", y="Petal Width") +
theme_minimal()
ggplot(iris, aes(x=Species, y=Sepal.Length, fill=Species)) +
geom_boxplot() +
labs(title="Sepal Length Distribution by Species") +
theme_minimal()
head(iris)
set.seed(123)  # reproducibility
trainIndex <- createDataPartition(iris$Species, p=0.7, list=FALSE)
trainData <- iris[trainIndex, ]
testData  <- iris[-trainIndex, ]
ctrl <- trainControl(method="cv", number=5)  # 5-fold CV
model_knn <- train(
Species ~ ., data=trainData,
method="knn",
trControl=ctrl,
preProcess=c("center", "scale"),
tuneLength=10
)
print(model_knn)
plot(model_knn)
pred_knn <- predict(model_knn, testData)
confusionMatrix(pred_knn, testData$Species)
importance <- varImp(model_knn)
print(importance)
plot(importance)
